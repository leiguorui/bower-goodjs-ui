/*! goodow-ui 2014-05-04 */
angular.module("goodow.ui",["goodow.ui.services","goodow.ui.svg"]);var serviceModule;(function(t,e){serviceModule=e.module("goodow.ui.services",[]).factory("goodowConstant",function(){return{SVG_SID:"someaddress.s",SERVER:"http://test.goodow.com:8080/eventbus"}}).factory("realtimeService",["goodowConstant",function(e){var r={debug:!0,forkLocal:!0};return function(){var a=new t.good.channel.WebSocketBus(e.SERVER,r);return a}}]).factory("goodowUtil",function(){function t(t,e){t.style("-webkit-transform",e).style("-moz-transform",e).style("-o-transform",e).style("transform",e)}return{transform:t}}).factory("graphService",["goodowUtil",function(t){var r=d3.svg.line().x(function(t){return t[0]}).y(function(t){return t[1]}).interpolate("linear"),a=null,o=null,n=function(e,r){if("rect"===e.type){var a=r.append("g").append("rect");a.attr("fill",e.fill).attr("stroke",e.stroke).attr("stroke-width",e["stroke-width"]).attr("stroke-linecap","round"),a.attr("x",e.x).attr("y",e.y).attr("width",e.width).attr("height",e.height),e.transform&&t.transform(a,"rotate("+e.transform.rotate+"deg)")}},i=function(e,r){var a=r.append("g").append("ellipse");a.attr("fill",e.fill).attr("stroke",e.stroke).attr("stroke-width",e["stroke-width"]).attr("stroke-linecap","round"),a.attr("cx",e.cx).attr("cy",e.cy).attr("rx",e.rx).attr("ry",e.ry),e.transform&&t.transform(a,"rotate("+e.transform.rotate+"deg)")},s=function(a,o){var n=o.append("g").append("path");n.attr("stroke",a.stroke).attr("stroke-width",a["stroke-width"]).attr("fill","none").attr("stroke-linecap","round"),e.isArray(a.d)&&a.d.length>=2&&n.attr("d",r(a.d)),a.transform&&t.transform(n,"rotate("+a.transform.rotate+"deg)")},l={ellipse:i,path:s,rect:n};return{drawGraph:function(t){var r=l[t.type],n=d3.select("#mysvg");if(a=n.property("height").animVal.value,o=n.property("width").animVal.value,!e.isFunction(r))throw Error(r+" is not a function");r.call(null,t,n)},lineFunction:function(){return r}}}])})(window,angular),angular.module("goodow.ui.svg",["goodow.ui.services"]).controller("SVGController",["$scope","realtimeService","goodowConstant","$log",function(t,e,r){var a=e();a.registerHandler("@goodow.bus.onOpen",function(){console.log("Opened at: "+(""+new Date))}),a.registerHandler("@goodow.bus.onClose",function(){console.log("Closed at: "+(""+new Date))}),a.registerHandler("@goodow.bus.onError",function(){}),a.registerHandler(r.SVG_SID,function(e){t.$apply(function(t){t.data=e.body()})}),t.$watch("sendData",function(){t.sendData&&a.publish(r.SVG_SID,t.sendData)})}]).directive("goodowcanvas",["realtimeService","goodowConstant","graphService",function(t,e,r){function a(t,e){"rect"==e.type?t.attr("width",e.width).attr("height",e.height).attr("x",e.startX).attr("y",e.startY):"ellipse"==e.type?t.attr("rx",e.rx).attr("ry",e.ry).attr("cx",e.startX).attr("cy",e.startY):"path"==e.type&&t.attr("d",o(e.d))}var o=r.lineFunction(),n=function(t){var e=d3.select("#mysvg").append("g"),r=e.append(t.type).attr("fill",t.fill).attr("stroke",t.stroke).attr("stroke-width",t.stroke_width).attr("stroke-dasharray",t.stroke_dasharray).attr("stroke-linecap","round");return r},i=function(e,i){var s,l={fill:"none",stroke:"blue",stroke_width:1,stroke_dasharray:"1,2",canDraw:!1,hasDrawFinish:!0};s=angular.extend({},l),e.$watch("data",function(){var t,a=e.data;for(var o in a)t=angular.extend({},a[o]),t.type=o,r.drawGraph(t)});var d,p,h,c=i.find("svg")[0];d3.select(c).on("mousedown",function(){var t=this;if(1==d3.event.which)switch(e.shape){case"ellipse":s.type="ellipse",s.rx=0,s.ry=0,s.tempX=d3.event.offsetX,s.tempY=d3.event.offsetY,s.canDraw=!0,s.hasDrawFinish=!1,d=n(s);break;case"rect":s.type="rect",s.width=0,s.height=0,s.startX=s.tempX=d3.event.offsetX,s.startY=s.tempY=d3.event.offsetY,s.canDraw=!0,s.hasDrawFinish=!1,p=n(s);break;case"path":s.type="path",s.d=[],s.d.push([d3.event.offsetX,d3.event.offsetY]),s.canDraw=!0,s.hasDrawFinish=!1,h=n(s)}d3.select(t).on("mouseup",function(){var t=this;if(1==d3.event.which){d3.select(t).attr("style","cursor:default"),s.canDraw=!1,s.hasDrawFinish=!0;var r={};if("rect"==s.type)p.attr("fill",e.fill).attr("stroke-width",e.stroke_width).attr("stroke",e.stroke).attr("stroke-dasharray",""),r.rect={},r.rect.x=s.startX,r.rect.y=s.startY,r.rect.width=s.width,r.rect.height=s.height,r.rect.fill=e.fill,r.rect.stroke=e.stroke,r.rect["stroke-width"]=e.stroke_width;else if("ellipse"==s.type)d.attr("fill",e.fill).attr("stroke-width",e.stroke_width).attr("stroke",e.stroke).attr("stroke-dasharray",""),r.ellipse={},r.ellipse.cx=s.startX,r.ellipse.cy=s.startY,r.ellipse.rx=s.rx,r.ellipse.ry=s.ry,r.ellipse.fill=e.fill,r.ellipse.stroke=e.stroke,r.ellipse["stroke-width"]=e.stroke_width;else if("path"==s.type){console.log(JSON.stringify(s.d));var a=void 0==e.stroke_width||0==e.stroke_width?1:e.stroke_width,n=void 0==e.stroke?"black":e.stroke;h.attr("d",o(s.d)).attr("stroke-width",a).attr("stroke",n).attr("fill","none").attr("stroke-dasharray",""),r.path={},r.path.d=s.d,r.path.fill=e.fill,r.path.stroke=n,r.path["stroke-width"]=a}}e.$apply(function(t){t.sendData=r}),d3.select(t).on("mousemove",null).on("mouseup",null)}).on("mousemove",function(){if(s.canDraw){var t=this;d3.select(t).attr("style","cursor:crosshair");var e=d3.event.offsetX,r=d3.event.offsetY;"rect"==s.type?(s.width=e-s.tempX,s.height=r-s.tempY,0>s.width&&(s.startX=e,s.width=Math.abs(s.width)),0>s.height&&(s.startY=r,s.height=Math.abs(s.height)),a(p,s)):"ellipse"==s.type?(s.rx=Math.abs(e-s.tempX)/2,s.ry=Math.abs(r-s.tempY)/2,s.startX=s.tempX+(e-s.tempX)/2,s.startY=s.tempY+(r-s.tempY)/2,a(d,s)):"path"==s.type&&(s.d.push([d3.event.offsetX,d3.event.offsetY]),h.attr("d",o(s.d)))}})}),i.on("$destroy",function(){t.close()})};return{restrict:"E",controller:"SVGController",link:i,templateUrl:"partials/canvasDirective.html"}}]).run(["$templateCache",function(t){t.put("partials/canvasDirective.html",'<div class="nav" id="draw_menu" ><input type="radio" name="path" ng-model="shape" value="line"/>  zhi<input type="radio" name="path" ng-model="shape" value="path2"/> jian<input type="radio" name="path" ng-model="shape" value="path3"/> qu<input type="radio" name="path" ng-model="shape" value="path4"/>  zhe<input type="radio" name="path" ng-model="shape" value="path5"/> hu<input type="radio" name="path" ng-model="shape" value="path"/> ziyou<input type="radio"  ng-model="shape" value="rect"/>  juxing<input type="radio"  ng-model="shape" value="ellipse"/> tuoyuan<input type="text" name="basic" ng-model="stroke" id="border_color"/>RGB or name ：边框颜色<input type="text" name="basic" ng-model="fill" id="fill_color"/>RGB or name :填充颜色<input type="text" name="basic" ng-model="stroke_width" id="border_width"/>Number</div><svg id="mysvg"></svg>')}]);